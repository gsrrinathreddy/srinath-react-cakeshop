{"ast":null,"code":"var _jsxFileName = \"/Users/gsrrinathreddy/training/redux and rtk/react-rtk-cakeshop/src/pages/Cakes/index.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Box } from '@mui/material';\nimport { ordered, restocked } from '../../features/cakes/cakesSlice';\nimport ItemCard from '../../components/ItemCard';\nimport BakingoCake from '../../assets/Bakingo_cake.jpg';\nimport CakeSquare from '../../assets/cake_square.jpg';\nimport ChocolateFunneti from '../../assets/chocolate_funfetti.jpg';\nimport Chocolate from '../../assets/chocolate.jpg';\nimport CocomelonCake from '../../assets/cocomelon_cake.jpg';\nimport EgglessChocolate from '../../assets/Eggless_chocolate_cake.jpg';\nimport FondantWedding from '../../assets/Fondant_wedding_cake.jpg';\nimport FunfettiCupcakes from '../../assets/Funfetti_cupcakes.jpg';\nimport GrapeBerry from '../../assets/grapeberry_cake.jpg';\nimport NumberCakes from '../../assets/Number-Cakes-Recipe.jpg';\nimport RainbowCake from '../../assets/Rainbow_cake.jpg';\nimport SnickerFuse from '../../assets/Snicker_fuse_chocolate_cake.jpg';\nimport SpecialValsad from '../../assets/special_valsad_cake.jpg';\nimport VeganStrawberry from '../../assets/vegan-strawberry-cake.jpg';\nimport WeddingCakes from '../../assets/Wedding_cake.jpg';\nimport Grid from '@mui/material/Grid';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cakesList = [{\n  title: \"Bakingo Cake\",\n  subheader: \"super cake\",\n  cardMedia: BakingoCake\n}, {\n  title: \"Cake Square\",\n  subheader: \"made from heart\",\n  cardMedia: CakeSquare\n}, {\n  title: \"Chocolate Funfetti\",\n  subheader: \"Have fun of chocolate flavor\",\n  cardMedia: BakingoCake\n}, {\n  title: \"Chocolate Cake\",\n  subheader: \"Chocolate in cake\",\n  cardMedia: Chocolate\n}, {\n  title: \"Cocomelon Cake\",\n  subheader: \"Super melon cake\",\n  cardMedia: CocomelonCake\n}, {\n  title: \"Eggless Chocolate Cake\",\n  subheader: \"Pure vegetarian cake\",\n  cardMedia: EgglessChocolate\n}, {\n  title: \"Fondent Wedding Cake\",\n  subheader: \"Make your wedding more sweetful and memorable\",\n  cardMedia: FondantWedding\n}, {\n  title: \"Funfetti Cup Cakes\",\n  subheader: \"Have the fun with cup cakes\",\n  cardMedia: FunfettiCupcakes\n}, {\n  title: \"Grape Berry Cake\",\n  subheader: \"Enjoy fruit flavour of grape and berries mixed\",\n  cardMedia: GrapeBerry\n}, {\n  title: \"Number Cakes Recipe\",\n  subheader: \"Keep counting the numbers\",\n  cardMedia: NumberCakes\n}, {\n  title: \"Rainbow Cakes\",\n  subheader: \"Its not all about watching the rainbow, you have it too\",\n  cardMedia: RainbowCake\n}, {\n  title: \"Snicker Fuse Chocolate Cake\",\n  subheader: \"Now have your favourite snicker chocolate in the cake form\",\n  cardMedia: SnickerFuse\n}, {\n  title: \"Special Valsad Cake\",\n  subheader: \"Gift it to your special ones\",\n  cardMedia: SpecialValsad\n}, {\n  title: \"Vegan Strawberry Cake\",\n  subheader: \"Now its time for Strawberries\",\n  cardMedia: VeganStrawberry\n}, {\n  title: \"Wedding Cake\",\n  subheader: \"Wedding ...........with the cakes\",\n  cardMedia: WeddingCakes\n}];\nexport default function Cakes() {\n  _s();\n  const cakes = useSelector(state => state.cake.noOfCakes);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 2,\n          md: 3\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 12\n        },\n        children: cakesList.map(item => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            sm: 3,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(ItemCard, {\n              title: item.title,\n              subheader: item.subheader,\n              cardMedia: item.cardMedia\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"no of cakes : \", cakes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), \"This is a cake page\", /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch(ordered(10)),\n      children: \"Order cake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch(restocked(10)),\n      children: \"Restock Cakes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Cakes, \"1PonO+gYwIcW6v1rQmMxeqyl81Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Cakes;\nvar _c;\n$RefreshReg$(_c, \"Cakes\");","map":{"version":3,"names":["useDispatch","useSelector","Button","Box","ordered","restocked","ItemCard","BakingoCake","CakeSquare","ChocolateFunneti","Chocolate","CocomelonCake","EgglessChocolate","FondantWedding","FunfettiCupcakes","GrapeBerry","NumberCakes","RainbowCake","SnickerFuse","SpecialValsad","VeganStrawberry","WeddingCakes","Grid","cakesList","title","subheader","cardMedia","Cakes","cakes","state","cake","noOfCakes","dispatch","xs","md","sm","map","item"],"sources":["/Users/gsrrinathreddy/training/redux and rtk/react-rtk-cakeshop/src/pages/Cakes/index.js"],"sourcesContent":["import {useDispatch,useSelector} from 'react-redux'; \nimport { Button,Box } from '@mui/material';\nimport {ordered,restocked} from '../../features/cakes/cakesSlice';\nimport ItemCard from '../../components/ItemCard';\nimport BakingoCake from '../../assets/Bakingo_cake.jpg'\nimport CakeSquare from '../../assets/cake_square.jpg'\nimport ChocolateFunneti from '../../assets/chocolate_funfetti.jpg';\nimport Chocolate from '../../assets/chocolate.jpg'\nimport CocomelonCake from '../../assets/cocomelon_cake.jpg'\nimport EgglessChocolate from '../../assets/Eggless_chocolate_cake.jpg';\nimport FondantWedding from '../../assets/Fondant_wedding_cake.jpg'\nimport FunfettiCupcakes from '../../assets/Funfetti_cupcakes.jpg'\nimport GrapeBerry from '../../assets/grapeberry_cake.jpg';\nimport NumberCakes from '../../assets/Number-Cakes-Recipe.jpg'\nimport RainbowCake from '../../assets/Rainbow_cake.jpg'\nimport SnickerFuse from '../../assets/Snicker_fuse_chocolate_cake.jpg';\nimport SpecialValsad from '../../assets/special_valsad_cake.jpg'\nimport VeganStrawberry from '../../assets/vegan-strawberry-cake.jpg'\nimport WeddingCakes from '../../assets/Wedding_cake.jpg';\nimport Grid from '@mui/material/Grid';\n\n\nconst cakesList = [\n    {\n    title:\"Bakingo Cake\",\n    subheader:\"super cake\",\n    cardMedia:BakingoCake\n    }, \n    {\n    title:\"Cake Square\",\n    subheader:\"made from heart\",\n    cardMedia:CakeSquare\n    }, \n    {\n    title:\"Chocolate Funfetti\",\n    subheader:\"Have fun of chocolate flavor\",\n    cardMedia:BakingoCake\n    }, \n    {\n    title:\"Chocolate Cake\",\n    subheader:\"Chocolate in cake\",\n    cardMedia:Chocolate\n    }, \n    {\n    title:\"Cocomelon Cake\",\n    subheader:\"Super melon cake\",\n    cardMedia:CocomelonCake\n    }, \n    {\n    title:\"Eggless Chocolate Cake\",\n    subheader:\"Pure vegetarian cake\",\n    cardMedia:EgglessChocolate\n    }, \n    {\n    title:\"Fondent Wedding Cake\",\n    subheader:\"Make your wedding more sweetful and memorable\",\n    cardMedia:FondantWedding\n    }, \n    {\n    title:\"Funfetti Cup Cakes\",\n    subheader:\"Have the fun with cup cakes\",\n    cardMedia:FunfettiCupcakes\n    }, \n    {\n    title:\"Grape Berry Cake\",\n    subheader:\"Enjoy fruit flavour of grape and berries mixed\",\n    cardMedia:GrapeBerry\n    }, \n    {\n    title:\"Number Cakes Recipe\",\n    subheader:\"Keep counting the numbers\",\n    cardMedia:NumberCakes\n    }, \n    {\n    title:\"Rainbow Cakes\",\n    subheader:\"Its not all about watching the rainbow, you have it too\",\n    cardMedia:RainbowCake\n    }, \n    {\n    title:\"Snicker Fuse Chocolate Cake\",\n    subheader:\"Now have your favourite snicker chocolate in the cake form\",\n    cardMedia:SnickerFuse\n    }, \n    {\n    title:\"Special Valsad Cake\",\n    subheader:\"Gift it to your special ones\",\n    cardMedia:SpecialValsad\n    }, \n    {\n    title:\"Vegan Strawberry Cake\",\n    subheader:\"Now its time for Strawberries\",\n    cardMedia:VeganStrawberry\n    }, \n    {\n    title:\"Wedding Cake\",\n    subheader:\"Wedding ...........with the cakes\",\n    cardMedia:WeddingCakes\n    }, \n\n]\nexport default function Cakes(){\n    const cakes = useSelector((state)=> state.cake.noOfCakes)\n    const dispatch = useDispatch(); \n    return(\n        <>\n         <Box display='flex' justifyContent='center'>\n         <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }} >\n               \n               {\n               cakesList.map((item)=>{\n                   return(\n                       <Grid item xs={2} sm={3} md={3} >\n                          <ItemCard title={item.title} subheader={item.subheader} cardMedia={item.cardMedia}/>\n                       </Grid>\n                   )\n               })\n           }\n           \n           </Grid>\n        </Box>\n            \n\n           \n            \n            <h2>no of cakes : {cakes}</h2>\n            This is a cake page\n            <Button\n            onClick = {()=>dispatch(ordered(10))}\n            >\n                Order cake\n            </Button>\n            <Button\n            onClick = {()=>dispatch(restocked(10))}\n            >\n                Restock Cakes\n            </Button>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}