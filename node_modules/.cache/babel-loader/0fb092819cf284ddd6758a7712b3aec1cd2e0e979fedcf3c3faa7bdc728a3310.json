{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  // cartItems:{\n  //     name:null,\n  //     qty:null,\n  //     actualPrice:null,\n  //     discountedPrice:null,\n  //     percentageDiscount:null\n  // },\n  cartList: [],\n  totalItems: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  extraReducers: {\n    ['cake/ordered']: (state, action) => {\n      state.cartList.push(action.payload);\n      state.totalItems += parseInt(action.payload.qty);\n    },\n    ['chocolate/ordered']: (state, action) => {\n      console.log('chocolate ordered', action.payload);\n      state.cartList.push(action.payload);\n      state.totalItems += parseInt(action.payload.qty);\n      console.log('state', state);\n    }\n  }\n});\nexport default cartSlice.reducer;\n//export const {ordered,restocked} = cartSlice.actions; \n\n// the cakeslice exports two actions called ordered and restocked \n// the action/types that are exported are cake/ordered and cake/restocked action type.","map":{"version":3,"names":["createSlice","initialState","cartList","totalItems","cartSlice","name","extraReducers","state","action","push","payload","parseInt","qty","console","log","reducer"],"sources":["/Users/gsrrinathreddy/training/redux and rtk/react-rtk-cakeshop/src/features/cart/cartSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    // cartItems:{\n    //     name:null,\n    //     qty:null,\n    //     actualPrice:null,\n    //     discountedPrice:null,\n    //     percentageDiscount:null\n    // },\n    cartList:[],\n    totalItems:0\n    \n}\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState,\n    extraReducers:{\n\n        ['cake/ordered']:(state,action) => {\n           \n            state.cartList.push(action.payload)\n            state.totalItems += parseInt(action.payload.qty);\n        },\n        ['chocolate/ordered']:(state,action) => {\n            console.log('chocolate ordered',action.payload)\n            state.cartList.push(action.payload)\n            state.totalItems += parseInt(action.payload.qty);\n            console.log('state',state)\n        }\n    }\n})\n\n\nexport default cartSlice.reducer;\n//export const {ordered,restocked} = cartSlice.actions; \n\n// the cakeslice exports two actions called ordered and restocked \n// the action/types that are exported are cake/ordered and cake/restocked action type. \n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,YAAY,GAAG;EACjB;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAC,EAAE;EACXC,UAAU,EAAC;AAEf,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,MAAM;EACXJ,YAAY;EACZK,aAAa,EAAC;IAEV,CAAC,cAAc,GAAE,CAACC,KAAK,EAACC,MAAM,KAAK;MAE/BD,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACnCH,KAAK,CAACJ,UAAU,IAAIQ,QAAQ,CAACH,MAAM,CAACE,OAAO,CAACE,GAAG,CAAC;IACpD,CAAC;IACD,CAAC,mBAAmB,GAAE,CAACL,KAAK,EAACC,MAAM,KAAK;MACpCK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACN,MAAM,CAACE,OAAO,CAAC;MAC/CH,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACnCH,KAAK,CAACJ,UAAU,IAAIQ,QAAQ,CAACH,MAAM,CAACE,OAAO,CAACE,GAAG,CAAC;MAChDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACP,KAAK,CAAC;IAC9B;EACJ;AACJ,CAAC,CAAC;AAGF,eAAeH,SAAS,CAACW,OAAO;AAChC;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}